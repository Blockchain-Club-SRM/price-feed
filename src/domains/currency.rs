#[derive(serde::Serialize, serde::Deserialize)]
pub enum Currency{
    BTC,
    ETH,
    LTC,
    BCH,
    BNB,
    EOS,
    XRP,
    XLM,
    LINK,
    DOT,
    YFI,
    USD,
    AED,
    ARS,
    AUD,
    BDT,
    BHD,
    BMD,
    BRL,
    CAD,
    CHF,
    CLP,
    CNY,
    CZK,
    DKK,
    EUR,
    GBP,
    HKD,
    HUF,
    IDR,
    ILS,
    INR,
    JPY,
    KRW,
    KWD,
    LKR,
    MMK,
    MXN,
    MYR,
    NGN,
    NOK,
    NZD,
    PHP,
    PKR,
    PLN,
    RUB,
    SAR,
    SEK,
    SGD,
    THB,
    TRY,
    TWD,
    UAH,
    VEF,
    VND,
    ZAR,
    XDR,
    XAG,
    XAU
}

impl Currency {
    pub fn as_str(&self)-> &str {
        match self {
            Self::BTC => "btc",
            Self::ETH => "eth",
            Self::LTC => "ltc",
            Self::BCH => "bch",
            Self::BNB => "bnb",
            Self::EOS => "eos",
            Self::XRP => "xrp",
            Self::XLM => "xlm",
            Self::LINK => "link",
            Self::DOT => "dot",
            Self::YFI => "yfi",
            Self::USD => "usd",
            Self::AED => "aed",
            Self::ARS => "ars",
            Self::AUD => "aud",
            Self::BDT => "bdt",
            Self::BHD => "bhd",
            Self::BMD => "bmd",
            Self::BRL => "brl",
            Self::CAD => "cad",
            Self::CHF => "chf",
            Self::CLP => "clp",
            Self::CNY => "cny",
            Self::CZK => "czk",
            Self::DKK => "dkk",
            Self::EUR => "eur",
            Self::GBP => "gbp",
            Self::HKD => "hkd",
            Self::HUF => "huf",
            Self::IDR => "idr",
            Self::ILS => "ils",
            Self::INR => "inr",
            Self::JPY => "jpy",
            Self::KRW => "krw",
            Self::KWD => "kwd",
            Self::LKR => "lkr",
            Self::MMK => "mmk",
            Self::MXN => "mxn",
            Self::MYR => "myr",
            Self::NGN => "ngn",
            Self::NOK => "nok",
            Self::NZD => "nzd",
            Self::PHP => "php",
            Self::PKR => "pkr",
            Self::PLN => "pln",
            Self::RUB => "rub",
            Self::SAR => "sar",
            Self::SEK => "sek",
            Self::SGD => "sgd",
            Self::THB => "thb",
            Self::TRY => "try",
            Self::TWD => "twd",
            Self::UAH => "uah",
            Self::VEF => "vef",
            Self::VND => "vnd",
            Self::ZAR => "zar",
            Self::XDR => "xdr",
            Self::XAG => "xag",
            Self::XAU => "xau",
        }
    }
}

impl TryFrom<String> for Currency {
    type Error = String;
    fn try_from(value: String) -> Result<Self, Self::Error> {
        match value.as_str() {
            "btc" => Ok(Self::BTC),
            "eth" => Ok(Self::ETH),
            "ltc" => Ok(Self::LTC),
            "bch" => Ok(Self::BCH),
            "bnb" => Ok(Self::BNB),
            "eos" => Ok(Self::EOS),
            "xrp" => Ok(Self::XRP),
            "xlm" => Ok(Self::XLM),
            "link" => Ok(Self::LINK),
            "dot" => Ok(Self::DOT),
            "yfi" => Ok(Self::YFI),
            "usd" => Ok(Self::USD),
            "aed" => Ok(Self::AED),
            "ars" => Ok(Self::ARS),
            "aud" => Ok(Self::AUD),
            "bdt" => Ok(Self::BDT),
            "bhd" => Ok(Self::BHD),
            "bmd" => Ok(Self::BMD),
            "brl" => Ok(Self::BRL),
            "cad" => Ok(Self::CAD),
            "chf" => Ok(Self::CHF),
            "clp" => Ok(Self::CLP),
            "cny" => Ok(Self::CNY),
            "czk" => Ok(Self::CZK),
            "dkk" => Ok(Self::DKK),
            "eur" => Ok(Self::EUR),
            "gbp" => Ok(Self::GBP),
            "hkd" => Ok(Self::HKD),
            "huf" => Ok(Self::HUF),
            "idr" => Ok(Self::IDR),
            "ils" => Ok(Self::ILS),
            "inr" => Ok(Self::INR),
            "jpy" => Ok(Self::JPY),
            "krw" => Ok(Self::KRW),
            "kwd" => Ok(Self::KWD),
            "lkr" => Ok(Self::LKR),
            "mmk" => Ok(Self::MMK),
            "mxn" => Ok(Self::MXN),
            "myr" => Ok(Self::MYR),
            "ngn" => Ok(Self::NGN),
            "nok" => Ok(Self::NOK),
            "nzd" => Ok(Self::NZD),
            "php" => Ok(Self::PHP),
            "pkr" => Ok(Self::PKR),
            "pln" => Ok(Self::PLN),
            "rub" => Ok(Self::RUB),
            "sar" => Ok(Self::SAR),
            "sek" => Ok(Self::SEK),
            "sgd" => Ok(Self::SGD),
            "thb" => Ok(Self::THB),
            "try" => Ok(Self::TRY),
            "twd" => Ok(Self::TWD),
            "uah" => Ok(Self::UAH),
            "vef" => Ok(Self::VEF),
            "vnd" => Ok(Self::VND),
            "zar" => Ok(Self::ZAR),
            "xdr" => Ok(Self::XDR),
            "xag" => Ok(Self::XAG),
            "xau" => Ok(Self::XAU),
            _ => Err(format!("Invalid currency: {}", value)),
        }
    }
}